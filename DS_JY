return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bf,bf)local bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct=111,49,49,72,63,76,33,15,33,70,95,62,97,96,22,62,36,99,28,24,92,77,25,73,19,67,78,43,63,20,84,74,13,41,88,94,99,96,12,90,27,69,82,67,47,28,17,90,23,26 while bf~=64 do if bg<=799 then if bg>=449 then if bg>=601 then if bg<=690 then if bg<=601 then bq=(unpack or table.unpack)bg=646 else if bg<683 then cg=tonumber bg=690 else do cb={}end bg=738 end end else if bg<=738 then bg=779 for cu=0,255 do cb[cu]=bl(cu);end else if bg>784 then do cl={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,h,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,t,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,f,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,o,10,11,12,13,14,15,c,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,d,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,n,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,j,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,bd,11,8,9,6,m,4,5,2,3,0,1,},{w,14,13,12,11,10,9,8,p,6,5,4,3,2,1,0,},nil,nil}end bg=821 else bg=799 bv=bwfunction(c,d)return cb[cg(c,16)]end)end end end else if bg<=494 then if bg<490 then bg=494 cf=select else cn=type bg=530 end else if bg>=546 then if bg<569 then bg=577 by=math.abs else bk=math.floor bg=601 end else bg=546 co=(function(c,d,d)if'number'==cn(c)then return true else return false end end)end end end else if bg<=215 then if bg<=87 then if bg>56 then bh=string.byte bg=126 else bg=87 bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct=nil end else if bg>=171 then if bg<213 then bg=215 ck=string.sub else bw=string.gsub bg=233 end else bl=string.char bg=171 end end else if bg>=333 then if bg>=370 then if bg>374 then bg=449 bx=setmetatable else bz=(getfenv or function()return _ENV end)bg=416 end else bg=370 ci=math.ldexp end else if bg>=275 then if bg>281 then bj=table.insert bg=333 else bg=313 bs=table.concat end else br=string.rep bg=275 end end end end else if bg>=1174 then if bg<=1266 then if bg<=1193 then if bg<1190 then cd=function()local c,d c,d=bh(bv,cs,(cs+2))cs=(cs+2);do return((d*256)+c);end end bg=1193 else do ce=function()local c,d,f,h,j,m,n,o=41,59,21,75,99,34,34,82,39,77,19,52,53,47,25,72,56,78,28,91,86 while c~=31 do if d>=230 then if d<=281 then if d>=266 then if d<274 then d=281 n=(cp(0,h,20)*g+m)else d=315 o=1 end else j=cp(20,h,11)d=266 end else if d>=362 then if d>371 then c=31;else d=404 return(f*(2^(j-1023))*(n/bn+o))end else d=362 do if 0==j then if not(n==0)then j=1 o=0 else return(f*0)end elseif 2047~=j then else do if not(n~=0)then do do return(f*(0/0))end end else return(f*(1/0))end end end end end end else if d<=94 then if d>61 then m=bt()d=133 else f,h,j,m,n,o=nil d=94 end else if d>=175 then if d<211 then if((m==0 and h==0))then return 0 end d=213 else f=((-1)^cp(31,h,1))d=230 end else d=175 do h=bt()end end end end end end end bg=1210 end else if bg>=1232 then if bg>1235 then bp={}bg=1289 else bg=1266 cc=function(...)return{...},cf('#',...)end end else ch=function(c,c)local c,d,f,g=51,51,60,98,69,41,35,93,54,47,38,22 while c~=35 do if d<=112 then if d<=51 then d=84 f,g=nil else if d<110 then d=112 f=bt()else do g=bv:sub(cs,(cs+f-1))end d=149 end end else if d>=197 then if d<229 then d=233 do return g;end else c=35;end else d=197 cs=(cs+f);end end end end bg=1232 end end else if bg>=1416 then if bg<=1416 then bg=1432 bo=function(c,d,f,g)local g,h,j,m,n do h=c[142]end n=c[28]g=c[144]m=c[75]do j=cj end return function(...)local c,j,o,p,t,w,bd,bj,bk bj=1 j=-1 p=-1 do bk={}end o={...}c=(cf('#',...)-1)bd={}w={}for p=0,c do if(not(p<n))then bk[(p-n)]=o[(p+1)];else w[p]=o[(p+1)];end;end;do t=(c-n+1)end while true do local p,t,bl,br,bs,bw,bx,by,cb,cd bl=h[bj]bx=bl[163]br=bl[179]cb=bl[129]by=bl[164]cd=bl[133]t=bl[67]do bs=bl[130]end p=bl[81]bw=bl[47]do if not(bx<44)then if not(bx<l)then if not(bx>76)then if not(bx>70)then do if not(bl[163]<68)then if not(bx>68)then local l,br do l=cb end br={}if(#bd>0)then for cf=1,#bd do local cg do cg=bd[cf]end for cf=0,#cg do local ci,ck,cn ck=cg[cf]ci=ck[1]cn=ck[2]while ci==w and cn>=0 do br[cn]=ci[cn]ck[1]=br break end end end end return bq(w,l,j);else if(bl[163]<70)then w[cb]=(w[p]/w[cd]);else end end else if(bx>66)then do bj=((w[bl[129]]<w[cd])and p or bj)end else w[bl[129]]={};end end end else if not(bx<74)then if not(bx<75)then if(bx<76)then h[bj]=bp[t];do bj=p;end else local l,br,cf,cg,ci do cg=cb end ci=cd br=(cg+2)cf={w[cg](w[cg+1],w[br])}for ck=1,ci do w[(br+ck)]=cf[ck]end l=w[(cg+3)]if l then w[br]=l else bj=p;end;end else w[bl[129]]=(not w[p]);end else if not(bx>71)then w[cb]=bo(m[p],nil,f);else if(bx>72)then do bj=((g[bl[129]]~=g[cd])and p or bj)end else local l do l=w[bs][t]end w[bl[130]][t]=(l..w[cd]);end end end end else do if not(bx>81)then do if not(bx>78)then do if 77==bl[163]then w[cb]=(w[p]+g[cd]);else local l,br br=cb l=w[p]w[(br+1)]=l;do w[br]=l[w[cd]];end end end else if not(bx<80)then if 80==bx then w={};for l=bc,c do do if(l<n)then do w[l]=o[(l+1)];end else break end;end end;else do cj[cb]=w[by]end end else w[bw]=(function()do w[bl[bb]]=bo(m[by],nil,f);end end)end end end else if not(bl[163]>84)then do if not(bl[163]>82)then do cj[bl[129]]()end else if(bx<84)then while w[bl[129]]do bj=p;break end elseif((g[cb]<w[cd]))then bj=p;end end end else do if not(bx<86)then if(bx>86)then if not w[cb]then do bj=p;end end;else w[cb]=cj[by]end else do bj=p;end end end end end end end else if not(bx<55)then if not(bx<60)then if not(bx<63)then do if not(bx<64)then if 64==bx then w[cb]();else do w[bl[129]]=nil;end end else local c,l,n,o o=cb n=((cd-1)*50)c=w[o]l=p do for bb=1,l do c[(n+bb)]=w[(o+bb)]end;end end end else if not(bl[163]<61)then if(bx>61)then if(not(w[cb]==g[cd]))then bj=p;end;else w[cb]=(w[p]/g[cd]);end else if cb then cb=false;cd=bl[k];bj=(bj-1);else bj=(bj+p+bl[133]);end end end else do if not(bx<57)then if not(bl[163]>57)then do w[cb]=(w[p]%g[cd]);end else do if(bx>58)then w[cb]=(w[bl[81]]*g[bl[133]]);else if((w[bl[129]]<w[cd]))then bj=bl[81];end;end end end else if(bx<56)then do w[bl[129]][g[p]]=g[cd];end else j=bl[cb];end end end end else if not(bx<49)then if not(bx<52)then do if not(bx<53)then if(bx>53)then w[cb]=d[bl[81]];else if(not(w[cb]<w[cd]))then do bj=p;end end;end else local c,k,l c=cb l={w[c](bq(w,c+1,p))}k=0 do for n=c,cd do k=(k+1);w[n]=l[k];end end end end else if not(bl[163]>49)then else if not(bx~=50)then while((w[cb]~=w[cd]))do bj=p;break end else for c=cb,p do w[c]=nil;end;end end end else if not(bx<46)then do if not(bx>46)then w[bw]();else if(bx>47)then local c,k do k,c=cc(...)end for c=1,bl[129]do w[(c-1)]=k[c]end else w[cb]=(w[p]+w[cd]);end end end else if 44==bx then w[cb]=#w[p];else h[bj]=bp[t];do bj=bl[81];end end end end end end else if not(bx>21)then if not(bx<u)then if not(bx>15)then do if not(bl[163]>12)then do if(bl[163]>11)then w[cb]=(0~=p);do bj=(bj+i);end else w[cb]=w[p];end end else if not(bl[163]>a)then w[cb]=f[g[p]];else if 14==bx then w[bw]=(function()w[bl[129]]=bo(m[by],nil,f);end)else local a,c a=cb c=w[p]w[(a+1)]=c;w[a]=c[g[cd]];end end end end else if not(bx>18)then do if not(bx<17)then if(bl[163]<b)then local a a=cb do return bq(w,a,(a+p))end;else w[cb]=w[p]end else w[cb]=w[p][g[cd]];end end else if not(bx<20)then do if(bx>20)then do d[p]=w[cb];end else do return w[bs][t]end end end else w[cb]=(w[p]%w[cd]);end end end else if not(bx>4)then do if not(bx<2)then do if not(bx>2)then w[cb]=(w[p]-w[cd]);else if(bx<4)then w[bl[129]]=-w[p];else local a a=cb w[a]=w[a](bq(w,a+1,j));end end end else do if(bx>0)then local a a=cb w[a]=w[a](w[a+1]);else local a,b a=cb b={}do for c=1,#bd do local d d=bd[c]for c=0,#d do local i,k,l l=d[c]k=l[1]i=l[2]if(k==w and i>=a)then b[i]=k[i];l[1]=b;end;end;end;end end end end end else if not(bx>7)then if not(bl[163]<6)then if(bl[163]>6)then w[cb]=f[g[bl[81]]][g[cd]];else if not w[bl[133]]then w[cb]=w[cd];bj=p;end;end else local a,b,c,d b=cb d,a=cc(w[b](bq(w,(b+1),p)))j=(a+b-1)do c=0 end do for a=b,j do c=(c+1);w[a]=d[c];end;end end else do if not(bx<9)then if not(bx~=9)then do g=cj[cb](g)end else f=w[bl[cb]]end else w[cb]=(w[p]*w[cd]);end end end end end else if not(bx>32)then if not(bx<27)then if not(bx<30)then do if not(bx<31)then if(bx>31)then cj[cb]={}else h[bj]={[67]=0,[129]=9,[81]=145,[s]=0,[163]=bx- -56};bj=(bj-1);end else local a,b b=cb a=p for c=b,a do w[c]=bk[(c-b)];end;end end else if not(bx>27)then w[cb]=cj[by]else if 28==bx then local a,b,c b=cb c=w[(b+2)]a=(w[b]+c)w[b]=a;do if((c>0))then do if(not(a>w[b+1]))then bj=bl[81];w[(b+3)]=a;end end elseif(not(a<w[b+1]))then do bj=bl[be];end w[(b+3)]=a;end end else do w[cb]=w[p][w[cd]];end end end end else if not(bx>23)then if(bx>22)then local a,b,c do a=cb end c=w[a]b=w[(a+2)]if((b>0))then do if((c>w[a+1]))then bj=p;else do w[(a+3)]=c;end end end elseif((c<w[a+1]))then bj=p;else w[(a+3)]=c;end else w[bl[129]]=(w[p]^w[bl[133]]);end else if not(bx<25)then if(bl[163]>25)then local a a=bl[129]do w[a]=w[a](bq(w,a+1,p));end else local a do a=cb end do do return w[a](bq(w,(a+ba),p))end end;end else do bj=((g[cb]<w[cd])and p or bj)end end end end else if not(bx>37)then if not(bl[163]<35)then if not(bx<36)then if(bx>36)then w[bl[cb]]=w else end else cj=w end else if(bx>33)then local a,b a=bl[81]b=w[a]for c=(a+1),cd do b=(b..w[c]);end;w[cb]=b;else w[cb][w[p]]=w[cd];end end else if not(bx<41)then if not(bx<42)then do if(bx<43)then f[g[bl[81]]]=w[cb];elseif((w[cb]>w[cd]))then bj=p;end end else cj[cb]=cj[bl[164]]end else if not(bx>38)then do return w[cb]end else if(bl[163]>39)then local a a={}if(#bd>0)then for b=1,#bd do local c c=bd[b]for b=0,#c do local d,f,h d=c[b]f=d[1]h=d[2]if(f==w and h>=0)then a[h]=f[h]d[1]=a end end end end return w[(cb+2)],1,bl[cb];else do w[cb]=g[p]end end end end end end end end end bj=(bj+1);end;end;end else if bg<1471 then bg=1477 return bo(bm(bz()),{},bz())();else bf=64;end end else if bg<=1289 then do bm=function(a,b,b,b)local b,c,d,f,g,h,i,j=93,70,27,51,86,85,68,13,51,56,37,99,33,60,80,54,74,80,73,77,61,96,54,77 while b~=50 do if c>=317 then if c>=460 then if c<=495 then if c>463 then c=511 for k=1,bt()do local l,m,n,o,p,s=96,67,80,62,36,35,91,46,38,77,91,33,68,66,12,32,20,95,79,94,27,68,28,10,18 while l~=49 do if m>=308 then if m<=390 then if m<=330 then if m<322 then m=330 p[163]=bu(o,1,y);else m=375 p[129]=bu(n,3,11);end else if m<387 then m=390 p[81]=bu(o,12,33);else p[133]=bu(n,21,29);m=425 end end else if m<=448 then if m>429 then m=468 p[130]=-p[129]else m=448 p[67]=bu(n,12,20);end else if m>=497 then if m>504 then l=49;else m=536 h[k]=p;end else m=497 p[47]=-p[133]end end end else if m<=154 then if m>=116 then if m<148 then do p[179]=ca();end m=154 else p[106]={};m=193 end else if m<87 then m=95 n,o,p,s=nil else m=116 p={{},nil,nil,nil,nil}end end else if m<=215 then if m<208 then m=215 while ca()==1 do for k=1,ca()do p[106][k]={ca()==0,bt()}end break end else n=bt()m=231 end else if m<=231 then o=bt()m=251 else if m<288 then s=bu(n,1,2)m=292 else m=308 p[128]=s end end end end end end end else d[28]=ca();c=495 end else if c<=511 then d[142]=h;c=559 else if c<588 then c=596 return d;else b=50;end end end else if c<=358 then if c>323 then c=404 d[144]=i else for b=1,j do local k,l,m,n=48,53,52,89,68,76,47,36,13,46,79,71 while k~=25 do if l>=139 then if l>=156 then if l<175 then l=180 i[b]=n;else k=25;end else l=156 do if(not(m~=0))then n=(0~=ca());elseif(1==m)then n=ce();elseif(not(m~=4))then n=ch();elseif(3==m)then n=a[ch()];end;end end else if l>=84 then if l<105 then m=ca()l=109 else l=139 n=nil end else l=84 m,n=nil end end end end c=358 end else if c<438 then for a=1,bt()do f[a-1]=bm();end c=443 else c=460 d[75]=f;end end end else if c<=177 then if c<=106 then if c>77 then c=145 do h={}end else c=106 d,f,g,h,i,j=nil end else if c<174 then c=177 do f={}end else c=205 d={}end end else if c>=243 then if c>247 then c=317 i={}else c=273 j=bt()end else if c>211 then c=243 for a=(#bp+1),(#bp+g)do local b,d,f,h,i=56,71,24,63,27,50,82,66,60,71,78,39,22,84,11,37,43,61,54,10,16,56 while b~=41 do if d<=264 then if d<=147 then if d>=123 then if d>129 then d=163 i=bt()else f[179]=ca();d=147 end else if d<87 then d=89 f,h,i=nil else d=123 f={}end end else if d>=237 then if d>240 then f[163]=bu(h,1,11);d=311 else f[128]=bu(i,1,2);d=264 end else if d>170 then d=237 f[67]=ca();else h=bt()d=207 end end end else if d<=417 then if d>=368 then if d>377 then f[81]=bu(h,12,33);d=442 else d=417 f[133]=bu(i,21,29);end else if d<341 then f[129]=bu(i,3,11);d=346 else d=368 do f[164]=bu(i,12,20);end end end else if d>=496 then if d>502 then b=41;else d=521 bp[a]=f;end else if d>448 then d=496 f[47]=-f[133]else f[130]=-f[129]d=466 end end end end end end else c=226 g=bt()end end end end end end end bg=1330 else if bg>1334 then bg=1416 do bi={}end else cj={}bg=1372 end end end end else if bg<=934 then if bg<=837 then if bg>824 then bn=(2^q)bg=878 else cq=''bg=837 end else if bg>=894 then if bg>903 then for a=1,r do cr[a]=ct ct=(ct*x)end bg=965 else ct=2 bg=934 end else bg=894 cr={[0]=1}end end else if bg<=1038 then if bg>=1001 then if bg<1033 then bg=1038 do cm=(bit_lib and bit_lib.bxor or function(a,b)a=a%(v^32)b=b%(2^32)local c,d=0,1 while a>e and b>0 do local e,f=a%16,b%16 c=c+cl[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end else bg=1062 bu=function(a,b,c,d,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end else bg=1001 do cp=function(a,b,c,d,d)local d,e,f=75,69,81,30,51,84,19,74,16,18,12,18,17 while d~=31 do if e<=108 then if e<=69 then f=nil e=90 else if e>94 then f=((b/cr[a])%cr[c])e=153 else f=nil e=108 end end else if e>=202 then if e<227 then e=231 return f else break end else f=(f-f%z)e=202 end end end end end end else if bg<=1062 then bg=1105 cs=1 else if bg<1137 then bt=function()local a,b,c,d b,d,c,a=bh(bv,cs,(cs+3))cs=(cs+4);do return((a*16777216)+(c*65536)+(d*256)+b);end end bg=1144 else bg=1174 ca=function()local a a=bh(bv,cs,cs)cs=(cs+1);return a;end end end end end end end end end)(13,18,0,5,0,6,4294967296,9,1,0,81,66,7,3,9,7,52,31,133,1,11,2,15,2,11,1,1,129,0,10,81)
